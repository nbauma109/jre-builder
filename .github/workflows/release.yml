name: Build and Release JREs

on:
  push:
    tags:
      - '*'

jobs:
  build:
    name: Build JRE (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            osname: linux
          - os: windows-latest
            osname: windows
          - os: macos-latest
            osname: macos
    steps:
      - uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Get Project and JRE Versions
        id: versioning
        shell: bash
        run: |
          PROJECT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          JRE_VERSION=$(java -XshowSettings:properties -version 2>&1 | grep 'java.version = ' | awk '{ print $3 }')
          echo "PROJECT_VERSION=$PROJECT_VERSION" >> $GITHUB_ENV
          echo "JRE_VERSION=$JRE_VERSION" >> $GITHUB_ENV

      - name: Build JRE
        run: mvn clean package

      - name: Rename JRE Zip
        shell: bash
        run: |
          mkdir -p dist
          cp target/jre-*.zip dist/jre-${PROJECT_VERSION}-${JRE_VERSION}-${{ matrix.osname }}.zip

      - name: Upload JRE Artifact
        uses: actions/upload-artifact@v4
        with:
          name: jre-${{ matrix.osname }}
          path: dist/*.zip

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Flatten Artifacts
        shell: bash
        run: |
          mkdir -p release
          find dist -name "*.zip" -exec mv {} release/ \;
          ls -lh release/

      - name: Get Project and JRE Versions
        id: versioning
        shell: bash
        run: |
          PROJECT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          JRE_VERSION=$(java -XshowSettings:properties -version 2>&1 | grep 'java.version = ' | awk '{ print $3 }')
          echo "PROJECT_VERSION=$PROJECT_VERSION" >> $GITHUB_ENV
          echo "JRE_VERSION=$JRE_VERSION" >> $GITHUB_ENV

      - name: Publish Release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: release/*.zip
